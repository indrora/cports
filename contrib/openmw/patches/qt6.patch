commit 6834668360ea5dcc174872fe7a97205e11dbb4b3
Author: q66 <q66@chimera-linux.org>
Date:   Sun Jul 23 22:37:07 2023 +0200

    use qt6 for launcher/wizard

diff --git a/CMakeLists.txt b/CMakeLists.txt
index ef73402..15c51cc 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -230,10 +230,14 @@ find_package(OpenGL REQUIRED)
 find_package(LZ4 REQUIRED)
 
 if (USE_QT)
-    find_package(Qt5Core 5.12 REQUIRED)
-    find_package(Qt5Widgets REQUIRED)
-    find_package(Qt5Network REQUIRED)
-    find_package(Qt5OpenGL REQUIRED)
+    find_package(Qt5 5.15 COMPONENTS Core Widgets Network OpenGL)
+    if (Qt5_FOUND)
+        message(STATUS "Using Qt5")
+    else()
+        find_package(Qt6 6.4 COMPONENTS Core Widgets Network OpenGL REQUIRED)
+        message(STATUS "Using Qt6")
+        message(STATUS "Warning: Qt6 support is experimental and incomplete")
+    endif()
 endif()
 
 set(USED_OSG_COMPONENTS
@@ -790,7 +794,7 @@ if (OPENMW_OSX_DEPLOYMENT AND APPLE)
         message(FATAL_ERROR "macOS packaging requires CMake 3.19 or higher to sign macOS app bundles.")
     endif ()
 
-    get_property(QT_COCOA_PLUGIN_PATH TARGET Qt5::QCocoaIntegrationPlugin PROPERTY LOCATION_RELEASE)
+    get_property(QT_COCOA_PLUGIN_PATH TARGET Qt::QCocoaIntegrationPlugin PROPERTY LOCATION_RELEASE)
     get_filename_component(QT_COCOA_PLUGIN_DIR "${QT_COCOA_PLUGIN_PATH}" DIRECTORY)
     get_filename_component(QT_COCOA_PLUGIN_GROUP "${QT_COCOA_PLUGIN_DIR}" NAME)
     get_filename_component(QT_COCOA_PLUGIN_NAME "${QT_COCOA_PLUGIN_PATH}" NAME)
diff --git a/apps/launcher/CMakeLists.txt b/apps/launcher/CMakeLists.txt
index 79a2709..29e42a7 100644
--- a/apps/launcher/CMakeLists.txt
+++ b/apps/launcher/CMakeLists.txt
@@ -57,8 +57,8 @@ if(WIN32)
     set(QT_USE_QTMAIN TRUE)
 endif(WIN32)
 
-QT5_ADD_RESOURCES(RCC_SRCS ${CMAKE_SOURCE_DIR}/files/launcher/launcher.qrc)
-QT5_WRAP_UI(UI_HDRS ${LAUNCHER_UI})
+QT_ADD_RESOURCES(RCC_SRCS ${CMAKE_SOURCE_DIR}/files/launcher/launcher.qrc)
+QT_WRAP_UI(UI_HDRS ${LAUNCHER_UI})
 
 include_directories(${CMAKE_CURRENT_BINARY_DIR})
 if(NOT WIN32)
@@ -85,7 +85,7 @@ target_link_libraries(openmw-launcher
     components_qt
 )
 
-target_link_libraries(openmw-launcher Qt5::Widgets Qt5::Core)
+target_link_libraries(openmw-launcher Qt::Widgets Qt::Core)
 
 if (BUILD_WITH_CODE_COVERAGE)
   add_definitions (--coverage)
diff --git a/apps/wizard/CMakeLists.txt b/apps/wizard/CMakeLists.txt
index 03cd634..895fe0e 100644
--- a/apps/wizard/CMakeLists.txt
+++ b/apps/wizard/CMakeLists.txt
@@ -62,8 +62,8 @@ if(WIN32)
     set(QT_USE_QTMAIN TRUE)
 endif(WIN32)
 
-QT5_ADD_RESOURCES(RCC_SRCS ${CMAKE_SOURCE_DIR}/files/wizard/wizard.qrc)
-QT5_WRAP_UI(UI_HDRS ${WIZARD_UI})
+QT_ADD_RESOURCES(RCC_SRCS ${CMAKE_SOURCE_DIR}/files/wizard/wizard.qrc)
+QT_WRAP_UI(UI_HDRS ${WIZARD_UI})
 
 include_directories(${CMAKE_CURRENT_BINARY_DIR})
 
@@ -83,7 +83,7 @@ target_link_libraries(openmw-wizard
     components_qt
 )
 
-target_link_libraries(openmw-wizard Qt5::Widgets Qt5::Core)
+target_link_libraries(openmw-wizard Qt::Widgets Qt::Core)
 
 if (OPENMW_USE_UNSHIELD)
     target_link_libraries(openmw-wizard ${LIBUNSHIELD_LIBRARIES})
diff --git a/components/CMakeLists.txt b/components/CMakeLists.txt
index 324d5b4..404ae4e 100644
--- a/components/CMakeLists.txt
+++ b/components/CMakeLists.txt
@@ -387,7 +387,7 @@ if (USE_QT)
         helpviewer
         )
 
-    QT5_WRAP_UI(ESM_UI_HDR ${ESM_UI})
+    QT_WRAP_UI(ESM_UI_HDR ${ESM_UI})
 endif()
 
 if (CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
@@ -453,7 +453,7 @@ endif()
 
 if (USE_QT)
     add_library(components_qt STATIC ${COMPONENT_QT_FILES} ${ESM_UI_HDR})
-    target_link_libraries(components_qt components Qt5::Widgets Qt5::Core)
+    target_link_libraries(components_qt components Qt::Widgets Qt::Core)
     target_compile_definitions(components_qt PRIVATE OPENMW_DOC_BASEURL="${OPENMW_DOC_BASEURL}")
 endif()
 
